#!bin/bash

#set -ueo pipefail

HOOKS_DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

export PATH="$PATH:$HOOKS_DIR/../bin"

export UNITY_BUILDER_DIR="$(cd "$HOOKS_DIR/.." && pwd)"

PLUGIN_PREFIX="BUILDKITE_PLUGIN_UNITY_BUILDER"

echo "prefix: ${PLUGIN_PREFIX}"


echo "--- env: common"
eval "export PLATFORM=$"${PLUGIN_PREFIX}_PLATFORM"" && echo "PLATFORM=$PLATFORM"
eval "export PRODUCT_NAME=$"${PLUGIN_PREFIX}_PRODUCT_NAME"" && echo "PRODUCT_NAME=$PRODUCT_NAME"

echo "--- env: unity"
eval "export UNITY_OUTPUT=$"${PLUGIN_PREFIX}_UNITY_OUTPUT""
if [ -z "$UNITY_OUTPUT" ]
then
    UNITY_OUTPUT="\$(PROJECT_PATH)/Build/\$(PLATFORM)/\$(PRODUCT_NAME)"
    echo "default \$UNITY_OUTPUT: $UNITY_OUTPUT"
fi

echo "--- env: app center"
eval "export APPCENTER_OWNER_NAME=$"${PLUGIN_PREFIX}_APP_CENTER_OWNER_NAME""
eval "export APPCENTER_APP_NAME=$"${PLUGIN_PREFIX}_APP_CENTER_APP_NAME""

if [ -n "$PLATFORM" ]
then
    echo "override appcenter os from \$PLATFORM: $PLATFORM"
    export APPCENTER_APP_OS="$PLATFORM"
else
    eval "export APPCENTER_APP_OS=$"${PLUGIN_PREFIX}_APP_CENTER_APP_OS""
fi

eval "export APPCENTER_API_TOKEN=$"${PLUGIN_PREFIX}_APP_CENTER_API_TOKEN""

echo "--- env: docker"
eval "export DOCKER_FASTLANE=$"${PLUGIN_PREFIX}_DOCKER_FASTLANE"" && echo "DOCKER_FASTLANE=${DOCKER_FASTLANE:=false}"
