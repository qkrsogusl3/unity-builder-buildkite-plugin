#!/usr/bin/env bash

set -eo pipefail

if [ -z "$PLATFORM" ]
then
    echo "require \$PLATFORM"
    exit 1;
fi

cd ${UNITY_BUILDER_DIR}/src/fastlane

eval "source ${UNITY_BUILDER_DIR}/src/init-fastlane.sh"

echo "--- bundle install"
bundle install

lane="$(perl -pe 's/(\S+):(\S+)//g' <<< $@)"
echo "--- running fastlane $PLATFORM $lane"
bundle exec fastlane $PLATFORM "$@"


: '
success=false
retry=false

until [ "$success" = true ]
do
    echo "s: $success, r: $retry"
    
        

    #
    try
    (
        echo "s: $success, r: $retry"
        bundle exec fastlane android custom_lane
        # || [[ "$retry" = false ]] && echo "ex1"; throw $err_lane_exception || echo "ex2"; throw $err_failed

        exit_code=$?

        echo "exit: $exit_code"

        if [ "$exit_code" -eq 1 ]
        then
            if [ "$retry" = false ]
            then
                echo "run failed"
                #retry=true
                #eval "source ${UNITY_BUILDER_DIR}/src/init-fastlane.sh"
                throw $err_lane_exception
            else
                echo "retry failed"
                #exit 1;
                throw $err_failed
            fi
        fi

        success=true
        echo "s: $success"
        exit 0
    )
    catch || {
        echo "ex: $ex_code"
        case $ex_code in 
            $err_lane_exception)
                retry=true
                eval "source ${UNITY_BUILDER_DIR}/src/init-fastlane.sh"
            ;;
            *)
                echo "An unexpected exception was thrown"
                throw $ex_code
            ;;
        esac
    }
    #
done
'
